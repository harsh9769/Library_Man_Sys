name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check Code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Verify Docker Compose Version
      run: docker-compose --version  # Check the version of Docker Compose

    - name: Run docker-compose up
      run: docker-compose up -d  # Start the services defined in docker-compose.yml

    - name: Run Tests
      run: pytest
      env:
        DATABASE_URL: sqlite:///data/app.db  # Pass the database URL for tests

    - name: Stop Docker Compose
      run: docker-compose down  # Clean up the services after tests

  build-publish:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Verify Docker Compose Version
      run: docker-compose --version  # Check the version of Docker Compose

    - name: Build and Push Docker Image
      run: docker-compose build  # Build the images defined in your docker-compose.yml

    - name: Deploy Services with Docker Compose
      run: docker-compose up -d --build  # Rebuild the images and deploy
